{"version":3,"sources":["Cell.js","Board.js","App.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","flipCellsAroundMe","handleClick","e","bind","assertThisInitialized","classes","isLit","react_default","a","createElement","className","onClick","Component","Board","setState","board","createBoard","hasWon","state","coord","console","log","_this$props","ncols","nrows","_this$state","_coord$split$map","split","map","Number","_coord$split$map2","slicedToArray","y","x","flipCell","offNums","row","push","Math","random","chanceLightStartsOn","_this2","Fragment","tableBoard","_loop","concat","src_Cell_0","key","flipCellsAround","defaultProps","App","src_Board_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.497a19f3.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  flipCellsAroundMe = () => {\n\n  }\n\n  handleClick = (e) => {\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick}/>\n    )\n  }\n}\n\n\nexport default Cell;","import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Board.css\";\n\nclass Board extends Component {\n  static defaultProps = {\n    nrows: 5,\n    ncols: 5,\n    chanceLightStartsOn: 0.25,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasWon: false,\n      board: this.createBoard(),\n    };\n  }\n\n  flipCellsAround(coord) {\n    console.log(\"flipping\");\n    let { ncols, nrows } = this.props;\n    let { board, hasWon } = this.state;\n    let [y, x] = coord.split(\"-\").map(Number);\n\n    function flipCell(y, x) {\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n        board[y][x] = !board[y][x];\n      }\n    }\n\n    flipCell(y, x);\n    flipCell(y, x + 1);\n    flipCell(y, x - 1);\n    flipCell(y + 1, x);\n    flipCell(y - 1, x);\n\n    let offNums = 0;\n    for (let x = 0; x < this.props.nrows; x++) {\n      for (let y = 0; y < this.props.ncols; y++) {\n        if (board[x][y] === true) {\n          offNums++;\n        }\n      }\n    }\n\n    if (offNums === 0) {\n      hasWon = true;\n    }\n\n    this.setState({\n      board,\n      hasWon,\n    });\n  }\n\n  createBoard() {\n    let board = [];\n    for (let x = 0; x < this.props.nrows; x++) {\n      let row = [];\n      for (let y = 0; y < this.props.ncols; y++) {\n        row.push(Math.random() < this.props.chanceLightStartsOn);\n      }\n      board.push(row);\n    }\n    return board;\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      board: this.createBoard(),\n      hasWon: false,\n    });\n  };\n\n  render() {\n    if (this.state.hasWon) {\n      return (\n        <>\n          <div className=\"Board-winner\">\n            <div className=\"neon\">You</div>\n            <div className=\"flux\">win!</div>\n          </div>\n          <div className=\"Board-retry\">\n            <button className=\"Board-button\" onClick={this.handleClick}>\n              Play again <i className=\"fas fa-undo-alt\"></i>\n            </button>\n          </div>\n        </>\n      );\n    }\n\n    let tableBoard = [];\n    for (let x = 0; x < this.props.nrows; x++) {\n      let row = [];\n      for (let y = 0; y < this.props.ncols; y++) {\n        let coord = `${x}-${y}`;\n        row.push(\n          <Cell\n            key={coord}\n            isLit={this.state.board[x][y]}\n            flipCellsAroundMe={() => this.flipCellsAround(coord)}\n          />\n        );\n      }\n      tableBoard.push(<tr key={x}>{row}</tr>);\n    }\n\n    return (\n      <div>\n        <div className=\"Board-neons\">\n          <div className=\"neon\">Lights</div>\n          <div className=\"flux\">Out</div>\n        </div>\n        <table className=\"Board\">\n          <tbody>{tableBoard}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}